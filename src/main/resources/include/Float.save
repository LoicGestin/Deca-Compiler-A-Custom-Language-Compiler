class Float {

    float POSITIVE_INFINITY = Float.intBitsToFloat(0x7f800000);
    float NEGATIVE_INFINITY =  Float.intBitsToFloat(0xff800000);

    float NaN = Float.intBitsToFloat(0x7fc00000);

    float MAX_VALUE = 0x1.fffffep127;
    float MIN_VALUE = 0x0.000002p-126 ;

    bool isInfinite(float f){
        return (f==Float.POSITIVE_INFINITY || f== Float.NEGATIVE_INFINITY);
    }

    bool isNaN(float f){
        return f==Float.NaN;
    }

    int sign(float f){
        if (f<0){
            return -1;
        }
        return 1;
    }

    float abs(float f){
        if (f>=0){
            return f;
        }
        else{
            return -f;
        }
    }

    //Renvoie l'entier dont la représentation binaire sur 32 bits est identique à celle du flottant
    int floatToIntBits(float f) asm("")

    //Renvoie le flottant dont la représentation binaire sur 32 bits est identique à celle de l'entier
    float intBitsToFloat(int b) asm("")
}