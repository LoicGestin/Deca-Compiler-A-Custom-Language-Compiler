class Math {

    int precision = 256;

    float puiss(float f, int p) {
        float res = f;
        if (p == 0) {
            return 1.0;
        }
        int i = 1;
        while (i < p) {
            res = res * f;
            i++;
        }
        return res;
    }

    int fact(int p) {
        if (p == 0) {
            return 1;
        } else {
            int res = p;
            int i = p - 1;
            while (i > 0) {
                res = res * i;
                i--;
            }
            return res;
        }
    }

    float sin(float f) {
        float res = 0;
        int i = 0;
        while (i < precision) {
            res = res + (puiss(-1, i + 1) * puiss(f, 2 * i + 3)) / fact(2 * i + 3);
            i++;
        }
        return res;
    }

    float cos(float f) {
        float res = 0;
        int i = 0;
        while (i < precision) {
            res = res + (puiss(-1, i + 1) * puiss(f, 2 * (i + 1))) / fact(2 * (i + 1));
            i++;
        }
        return res;
    }

    float asin(float f) {
        if (f < -1.0 || f > 1.0) {
            println("Erreur : l'argument n'est pas dans l'intervalle de dÃ©finition.");
            return 0.0;
        }
        float res = 0;
        int i = 0;
        while (i < precision) {
            res = res + puiss(f, 2 * i + 3) * fact(2 * (i + 1)) / (puiss(2, 2 * (i + 1)) * puiss(fact(i + 1), 2) * (2 * i + 3));
            i++;
        }
        return res;
    }

    float atan(float f) {
        float res = 0;
        int i = 0;
        while (i < precision) {
            res = res + (puiss(-1, i + 1) * puiss(f, 2 * (i + 1) + 1)) / (2 * (i + 1) + 1);
            i++;
        }
        return res;
    }

    float ulp(float f) {
        println("ulp(f) not yet implemented");
    }
}